1)
CREATE TABLE INSTRUCTOR(IN_ID NUMBER, FNAME VARCHAR(20), LNAME VARCHAR(20), STREET VARCHAR(50), CITY VARCHAR(20), STATE VARCHAR(20), ZIP_CODE NUMBER, SECTION_NOS NUMBER);

CREATE OR REPLACE PACKAGE SCHOOL_API IS
  PROCEDURE GET_NAME_ADDRESS(
  TBL_NAME IN VARCHAR, 
  INST_ID IN NUMBER, 
  FI_NAME OUT VARCHAR,
  LA_NAME OUT VARCHAR,
  STRT OUT VARCHAR,
  CTY OUT VARCHAR,
  STTE OUT VARCHAR,
  ZPCD OUT NUMBER);
  FUNCTION INSTRUCTOR_STATUS(INST_ID NUMBER) RETURN VARCHAR;
END SCHOOL_API;

create or replace
PACKAGE BODY SCHOOL_API AS

  PROCEDURE GET_NAME_ADDRESS(
  TBL_NAME IN CHAR, 
  INST_ID IN NUMBER, 
  FI_NAME OUT CHAR,
  LA_NAME OUT CHAR,
  STRT OUT CHAR,
  CTY OUT CHAR,
  STTE OUT CHAR,
  ZPCD OUT NUMBER) IS
  BEGIN
    SELECT FNAME,LNAME,STREET,CITY,STATE,ZIP_CODE INTO FI_NAME,LA_NAME,STRT,CTY,STTE,ZPCD FROM INSTRUCTOR WHERE IN_ID=INST_ID;
  END GET_NAME_ADDRESS;

  FUNCTION INSTRUCTOR_STATUS(INST_ID NUMBER) RETURN VARCHAR IS
  SEC NUMBER;
  RES VARCHAR(50);
  BEGIN
    SELECT SECTION_NOS INTO SEC FROM INSTRUCTOR WHERE IN_ID=INST_ID;
    IF SEC>=3 THEN
      RES:= q'!TEACHER NEEDS VACATION!';
    ELSE
      RES:= q'!TEACHERS TEACHES !' || SEC;
    END IF;
    RETURN RES;
  END INSTRUCTOR_STATUS;

END SCHOOL_API;

DECLARE
TBL_NAME VARCHAR(20);
INST_ID NUMBER;
FI_NAME VARCHAR(20);
LA_NAME VARCHAR(20);
STRT VARCHAR(50);
CTY VARCHAR(20);
STTE VARCHAR(20);
ZPCD NUMBER;
BEGIN
INST_ID:=&INST_ID;
SCHOOL_API.get_name_address('INSTRUCTOR',INST_ID,FI_NAME, la_name, strt, CTY, STTE, ZPCD);
dbms_output.put_line(FI_NAME||' '||la_name||' '||STRT||' '||CTY||' '||STTE||' '||ZPCD);
dbms_output.put_line(school_api.instructor_status(INST_ID));
END;

2)

CREATE TABLE STUDENT(S_ID NUMBER, S_NAME VARCHAR(50), SECTION NUMBER); 

DECLARE
S_ID NUMBER;
EXP NUMBER;
CUST_EXP EXCEPTION;
BEGIN
S_ID:=&S_ID;
SCHOOL_API.remove_student(S_ID, EXP);
IF EXP=1 THEN
RAISE CUST_EXP;
END IF;
EXCEPTION
  WHEN CUST_EXP THEN
    dbms_output.put_line('NO SUCH STUDENT!');
END;


3)
CREATE TABLE ENROLLMENT(S_ID NUMBER, S_NAME VARCHAR(20));

DECLARE
S_ID NUMBER;
P_RI VARCHAR2(10);
BEGIN
S_ID:=&S_ID;
P_RI:='q!&P_RI!';
SCHOOL_API.remove_student2(S_ID, P_RI);
END;


create or replace
PACKAGE BODY SCHOOL_API AS

  PROCEDURE GET_NAME_ADDRESS(
  TBL_NAME IN CHAR, 
  INST_ID IN NUMBER, 
  FI_NAME OUT CHAR,
  LA_NAME OUT CHAR,
  STRT OUT CHAR,
  CTY OUT CHAR,
  STTE OUT CHAR,
  ZPCD OUT NUMBER) IS
  BEGIN
    SELECT FNAME,LNAME,STREET,CITY,STATE,ZIP_CODE INTO FI_NAME,LA_NAME,STRT,CTY,STTE,ZPCD FROM INSTRUCTOR WHERE IN_ID=INST_ID;
  END GET_NAME_ADDRESS;

  FUNCTION INSTRUCTOR_STATUS(INST_ID NUMBER) RETURN VARCHAR IS
  SEC NUMBER;
  RES VARCHAR(50);
  BEGIN
    SELECT SECTION_NOS INTO SEC FROM INSTRUCTOR WHERE IN_ID=INST_ID;
    IF SEC>=3 THEN
      RES:= q'!TEACHER NEEDS VACATION!';
    ELSE
      RES:= q'!TEACHERS TEACHES !' || SEC;
    END IF;
    RETURN RES;
  END INSTRUCTOR_STATUS;
  
  PROCEDURE REMOVE_STUDENT(STUD_ID IN NUMBER, EXP OUT NUMBER) IS
  DUMMY NUMBER;
  BEGIN
    EXP:=0;
    SELECT S_ID INTO DUMMY FROM STUDENT WHERE S_ID=STUD_ID;
    DELETE FROM STUDENT WHERE S_ID=stud_id;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      EXP:=1;
  END REMOVE_STUDENT;
  
  PROCEDURE REMOVE_STUDENT2(STUD_ID IN NUMBER, P_RI IN VARCHAR2) IS
  DUMMY NUMBER;
  BEGIN
    DUMMY:=0;
    IF P_RI='R' THEN
      SELECT S_ID INTO DUMMY FROM ENROLLMENT WHERE s_id= stud_id;
      IF DUMMY<>0 THEN
      dbms_output.put_line('RESTRICTED!!!');
      END IF;
    ELSIF P_RI='C' THEN
      DELETE FROM STUDENT WHERE S_ID=stud_id;
      DELETE FROM ENROLLMENT WHERE S_ID=stud_id;
    END IF;
  EXCEPTION
    WHEN NO_DATA_FOUND THEN
      DELETE FROM STUDENT WHERE S_ID=stud_id;
      dbms_output.put_line('DELETED!!!');
  END REMOVE_STUDENT2;

END SCHOOL_API;



